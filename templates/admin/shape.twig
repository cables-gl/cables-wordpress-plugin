<script type="text/javascript">{{ javascript|raw }}</script>
<section class="shape">
    <div class="row polypatchArea">
        <div class="cute-11-tablet left polypatchArea" id="polypatch">
            <canvas id="glcanvas_polypatch" width="1188" height="500"></canvas>
            <div id="performance"
                 style="position: absolute; left: 0px; top: 0px; opacity: 0.9; padding: 4px; cursor: pointer; background: rgb(34, 34, 34); font-family: monospace; font-size: 11px; z-index: 9999;">
                &nbsp;
            </div>
        </div>
        <div id="sidebar"></div>
    </div>
    <div class="shortcode">
        [polyshape id='{{ shape.id }}']
    </div>
</section>



<script type="text/javascript">

    var ps=ps||{};
    ps.customizer = {};
    ps.customizer.activatePreset = function(presetId) {
        if(presetId >= 0 && presetId < ps.shapeInfo.presets.length) {
            var presetParams = ps.shapeInfo.presets[presetId].parameters;
            for(var cablesVar in presetParams) {
                if(presetParams.hasOwnProperty(cablesVar)) {
                    ps.shapeInfo.customizerData.parameters[cablesVar].gui.options.default = presetParams[cablesVar];
                    switch(ps.shapeInfo.customizerData.parameters[cablesVar].gui.type) {
                        case 'color':
                            var floatColorArr = [
                                ps.customizer.twoBytesToFloat(presetParams[cablesVar][0]),
                                ps.customizer.twoBytesToFloat(presetParams[cablesVar][1]),
                                ps.customizer.twoBytesToFloat(presetParams[cablesVar][2])
                            ];
                            CABLES.patch.vars[cablesVar] = floatColorArr;
                            break;
                        default:
                            CABLES.patch.vars[cablesVar] = presetParams[cablesVar];
                            break;
                    }
                }
            }
            window.polyshapes.updateParams();
            this.lastSelectedPreset = presetId;
        }
    };
    ps.customizer.twoBytesToFloat = function(val) {
        return val === 0 ? 0 : (val/255);
    };

    CABLES.EMBED.addPatch("polypatch",
        {
            "patch":patchData,
            "prefixAssetPath":"{{ polyshapes_url }}/assets/{{ shape.id }}/",
            "canvas":
                {
                    "preserveDrawingBuffer":true,
                    "premultipliedAlpha":false,
                    "alpha":false
                },
            "onFinishedLoading":function()
            {
                ps.customizer.activatePreset(0);
            }



        });

    ps.shapeInfo={{ shape.json|raw }};

</script>

